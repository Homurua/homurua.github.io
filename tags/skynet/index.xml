<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>skynet on 放学后茶会</title>
    <link>https://wmf.im/tags/skynet/</link>
    <description>Recent content in skynet on 放学后茶会</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 26 Feb 2022 18:12:59 +0800</lastBuildDate><atom:link href="https://wmf.im/tags/skynet/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Skynet笔记（十四）协程的使用</title>
      <link>https://wmf.im/post/skynet%E7%AC%94%E8%AE%B0%E5%8D%81%E5%9B%9B%E5%8D%8F%E7%A8%8B%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sat, 26 Feb 2022 18:12:59 +0800</pubDate>
      
      <guid>https://wmf.im/post/skynet%E7%AC%94%E8%AE%B0%E5%8D%81%E5%9B%9B%E5%8D%8F%E7%A8%8B%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;p&gt;　　skynet 中有不少关键功能都是依赖 Lua 协程实现的，skynet 本身也对 Lua 协程有一些管理。本篇会尝试分析 skynet 中对 Lua 协程的使用方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Skynet笔记（十三）计时器实现</title>
      <link>https://wmf.im/post/skynet%E7%AC%94%E8%AE%B0%E5%8D%81%E4%B8%89%E8%AE%A1%E6%97%B6%E5%99%A8%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Sat, 26 Feb 2022 18:11:47 +0800</pubDate>
      
      <guid>https://wmf.im/post/skynet%E7%AC%94%E8%AE%B0%E5%8D%81%E4%B8%89%E8%AE%A1%E6%97%B6%E5%99%A8%E5%AE%9E%E7%8E%B0/</guid>
      <description>&lt;p&gt;　　skynet 的定时器采用了时间轮设计，可以高效的处理定时调用，本篇会尝试理清楚定时器的设计思路和实现方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Skynet笔记（十二）集群</title>
      <link>https://wmf.im/post/skynet%E7%AC%94%E8%AE%B0%E5%8D%81%E4%BA%8C%E9%9B%86%E7%BE%A4/</link>
      <pubDate>Sat, 26 Feb 2022 18:11:13 +0800</pubDate>
      
      <guid>https://wmf.im/post/skynet%E7%AC%94%E8%AE%B0%E5%8D%81%E4%BA%8C%E9%9B%86%E7%BE%A4/</guid>
      <description>&lt;p&gt;　　skynet 中支持 harbor 和 cluster 两种方式实现集群，本篇主要讨论 cluster，原因是我个人比较喜欢 cluster 这种方式，XD&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Skynet笔记（十一）netpack分析</title>
      <link>https://wmf.im/post/skynet%E7%AC%94%E8%AE%B0%E5%8D%81%E4%B8%80netpack%E5%88%86%E6%9E%90/</link>
      <pubDate>Sat, 26 Feb 2022 18:08:38 +0800</pubDate>
      
      <guid>https://wmf.im/post/skynet%E7%AC%94%E8%AE%B0%E5%8D%81%E4%B8%80netpack%E5%88%86%E6%9E%90/</guid>
      <description>&lt;p&gt;　　netpack 提供的是网络基础数据包的打包和解包功能，是网络输出传输绕不开的一个点。本篇会尝试分析一下 netpack 的实现。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Skynet笔记（十）网络分析</title>
      <link>https://wmf.im/post/skynet%E7%AC%94%E8%AE%B0%E5%8D%81%E7%BD%91%E7%BB%9C%E5%88%86%E6%9E%90/</link>
      <pubDate>Fri, 18 Feb 2022 14:53:02 +0800</pubDate>
      
      <guid>https://wmf.im/post/skynet%E7%AC%94%E8%AE%B0%E5%8D%81%E7%BD%91%E7%BB%9C%E5%88%86%E6%9E%90/</guid>
      <description>&lt;p&gt;　　网络相关的部分是我感觉 skynet 中最复杂的部分了，本篇中会尝试尽量完整的分析到网络相关的大部分功能的实现原理。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Skynet笔记（九）snlua服务详解</title>
      <link>https://wmf.im/post/skynet%E7%AC%94%E8%AE%B0%E4%B9%9Dsnlua%E6%9C%8D%E5%8A%A1%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Tue, 15 Feb 2022 03:10:34 +0800</pubDate>
      
      <guid>https://wmf.im/post/skynet%E7%AC%94%E8%AE%B0%E4%B9%9Dsnlua%E6%9C%8D%E5%8A%A1%E8%AF%A6%E8%A7%A3/</guid>
      <description>&lt;p&gt;　　snlua 服务绝对是 skynet 中最重要的服务了，是一切 lua 服务的原型，也是 99% 情况下业务中使用的服务。本篇会讲解一下 snlua 服务的实现。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Skynet笔记（八）一切都是消息</title>
      <link>https://wmf.im/post/skynet%E7%AC%94%E8%AE%B0%E5%85%AB%E4%B8%80%E5%88%87%E9%83%BD%E6%98%AF%E6%B6%88%E6%81%AF/</link>
      <pubDate>Mon, 14 Feb 2022 16:10:16 +0800</pubDate>
      
      <guid>https://wmf.im/post/skynet%E7%AC%94%E8%AE%B0%E5%85%AB%E4%B8%80%E5%88%87%E9%83%BD%E6%98%AF%E6%B6%88%E6%81%AF/</guid>
      <description>&lt;p&gt;　　skynet 使用的并发模型是 actor 模型，这就使得两个 actor 之间进行交互的时候全都是通过消息来实现的，而且不单单是 actor 之间交互使用了消息，前文提到的定时调用和网络事件也都是通过消息来通知目标服务的。可以说 skynet 中消息是一切交互的依托形式，本篇会尝试理清楚消息相关的实现。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Skynet笔记（七）各种线程的作用</title>
      <link>https://wmf.im/post/skynet%E7%AC%94%E8%AE%B0%E4%B8%83%E5%90%84%E7%A7%8D%E7%BA%BF%E7%A8%8B%E7%9A%84%E4%BD%9C%E7%94%A8/</link>
      <pubDate>Sun, 13 Feb 2022 17:36:02 +0800</pubDate>
      
      <guid>https://wmf.im/post/skynet%E7%AC%94%E8%AE%B0%E4%B8%83%E5%90%84%E7%A7%8D%E7%BA%BF%E7%A8%8B%E7%9A%84%E4%BD%9C%E7%94%A8/</guid>
      <description>&lt;p&gt;　　skynet 进程中一共有五种线程，主线程、monitor 线程、timer 线程、socket 线程和 worker 线程。每种线程各司其职，本篇会讲述一下各种线程的作用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Skynet笔记（六）handle的管理</title>
      <link>https://wmf.im/post/skynet%E7%AC%94%E8%AE%B0%E5%85%ADhandle%E7%9A%84%E7%AE%A1%E7%90%86/</link>
      <pubDate>Sat, 12 Feb 2022 03:10:43 +0800</pubDate>
      
      <guid>https://wmf.im/post/skynet%E7%AC%94%E8%AE%B0%E5%85%ADhandle%E7%9A%84%E7%AE%A1%E7%90%86/</guid>
      <description>&lt;p&gt;　　handle 作为服务的句柄，在 skynet 的消息发送和消息处理中都起到了不可或缺的作用。handle 的管理模块主要提供了 “通过 handle 查询服务地址” 和 “通过服务名字查询 handle” 这两个功能。本篇来讨论一下 skynet 是如何对 handle 进行管理的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Skynet笔记（五）认识服务</title>
      <link>https://wmf.im/post/skynet%E7%AC%94%E8%AE%B0%E4%BA%94%E8%AE%A4%E8%AF%86%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Fri, 11 Feb 2022 17:19:18 +0800</pubDate>
      
      <guid>https://wmf.im/post/skynet%E7%AC%94%E8%AE%B0%E4%BA%94%E8%AE%A4%E8%AF%86%E6%9C%8D%E5%8A%A1/</guid>
      <description>&lt;p&gt;　　skynet 是一个 actor 模型的消息框架，每个 actor 在 skynet 中就是一个服务。服务可以说是 skynet 中最重要的概念，本篇会介绍 skynet 中的服务。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Skynet笔记（四）认识module</title>
      <link>https://wmf.im/post/skynet%E7%AC%94%E8%AE%B0%E5%9B%9B%E8%AE%A4%E8%AF%86module/</link>
      <pubDate>Thu, 10 Feb 2022 23:36:55 +0800</pubDate>
      
      <guid>https://wmf.im/post/skynet%E7%AC%94%E8%AE%B0%E5%9B%9B%E8%AE%A4%E8%AF%86module/</guid>
      <description>&lt;p&gt;　　module 是 skynet 中一切 actor 的基石，每个 actor 的本质都是一种 module 的具象化。本篇会讲解跟 module 有关的内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Skynet笔记（三）bootstrap服务详解</title>
      <link>https://wmf.im/post/skynet%E7%AC%94%E8%AE%B0%E4%B8%89bootstrap%E6%9C%8D%E5%8A%A1%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Thu, 10 Feb 2022 23:02:50 +0800</pubDate>
      
      <guid>https://wmf.im/post/skynet%E7%AC%94%E8%AE%B0%E4%B8%89bootstrap%E6%9C%8D%E5%8A%A1%E8%AF%A6%E8%A7%A3/</guid>
      <description>&lt;p&gt;　　上文写到在 skynet 进程启动过程中，bootstrap 函数会读取传入的配置文件中 bootstrap 对应的项加载启动脚本，其中 bootstrap 一般的配置为 &amp;ldquo;snlua bootstrap&amp;rdquo;, 在执行中实际操作就是启动一个 snlua 服务，启动参数为 bootstrap.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Skynet笔记（二）启动流程</title>
      <link>https://wmf.im/post/skynet%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Thu, 10 Feb 2022 16:24:34 +0800</pubDate>
      
      <guid>https://wmf.im/post/skynet%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</guid>
      <description>&lt;p&gt;　　本篇大概讲一下 skynet 进程的启动流程，完全了解启动流程基本上也就明白了 skynet 的原理了，本篇会大概提到全部的启动流程。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Skynet笔记（一）目录结构</title>
      <link>https://wmf.im/post/skynet%E7%AC%94%E8%AE%B0%E4%B8%80%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/</link>
      <pubDate>Thu, 10 Feb 2022 15:33:55 +0800</pubDate>
      
      <guid>https://wmf.im/post/skynet%E7%AC%94%E8%AE%B0%E4%B8%80%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/</guid>
      <description>&lt;p&gt;　　要学习 skynet 源码，首先需要了解源码的文件分布。云风大佬还是很认真的把文件进行了分类的，方便了学习。本篇会对各个文件夹做一个大致的说明。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
